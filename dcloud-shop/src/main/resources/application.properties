server.port=8084
spring.application.name=dcloud-shop

#服务注册发现
spring.cloud.nacos.discovery.server-addr=124.222.215.26:8848
spring.cloud.nacos.discovery.username=nacos
spring.cloud.nacos.discovery.password=nacos


spring.shardingsphere.datasource.names=ds0
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://124.222.215.26:3306/dcloud_shop?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=xdclass.net

spring.shardingsphere.datasource.ds0.connectionTimeoutMilliseconds=30000
spring.shardingsphere.datasource.ds0.idleTimeoutMilliseconds=60000
spring.shardingsphere.datasource.ds0.maintenanceIntervalMilliseconds=30000
spring.shardingsphere.datasource.ds0.maxLifetimeMilliseconds=1800000
spring.shardingsphere.datasource.ds0.maxPoolSize=50
spring.shardingsphere.datasource.ds0.minPoolSize=50

spring.shardingsphere.props.sql.show=true

#----------配置默认数据库，比如短链域名，不分库分表--------------()
spring.shardingsphere.sharding.default-data-source-name=ds0
#默认id生成策略
spring.shardingsphere.sharding.default-key-generator.column=id
spring.shardingsphere.sharding.default-key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.default-key-generator.props.worker.id=${workerId}

# 指定product_order表的数据分布情况，配置数据节点,行表达式标识符使用 ${...} 或 $->{...}，但前者与 Spring 本身的文件占位符冲突，所以在 Spring 环境中建议使用 $->{...}
spring.shardingsphere.sharding.tables.product_order.actual-data-nodes=ds0.product_order_$->{0..1}
#水平分表策略+行表达式分片
spring.shardingsphere.sharding.tables.product_order.table-strategy.inline.algorithm-expression=product_order_$->{ account_no % 2 }
spring.shardingsphere.sharding.tables.product_order.table-strategy.inline.sharding-column=account_no

#-------redis连接配置-------
spring.redis.client-type=jedis
spring.redis.host=124.222.215.26
spring.redis.password=xdclass.net
spring.redis.port=6379
spring.redis.jedis.pool.max-active=1000
spring.redis.jedis.pool.max-idle=1000
spring.redis.jedis.pool.min-idle=1000
spring.redis.jedis.pool.max-wait=60000


##----------rabbit配置--------------
spring.rabbitmq.host=124.222.215.26
spring.rabbitmq.port=5672
#需要手工创建虚拟主机
spring.rabbitmq.virtual-host=dev
spring.rabbitmq.username=admin
spring.rabbitmq.password=password
#消息确认方式，manual(手动ack) 和auto(自动ack);消息消费重试达到指定次数进到异常交换机和异常队列，需要自动改为自动确认ack确认消息;
spring.rabbitmq.listener.simple.acknowledge-mode=auto

#mq配置重试
#开启重试，消费者代码不能添加try catch捕获不往外抛异常
#开启配置
spring.rabbitmq.listener.simple.retry.enabled=true
#最大重试次数
spring.rabbitmq.listener.simple.retry.max-attempts=4
# 重试消息的时间间隔，5秒
spring.rabbitmq.listener.simple.retry.initial-interval=5000
##----------微信支付参数--------------

#商户号
pay.wechat.mch-id=1601644442
#公众号id 需要和商户号绑定
pay.wechat.wx-pay-appid=wx5beac15ca207c40c
#商户证书序列号,需要和证书对应
pay.wechat.mch-serial-no=7064ADC5FE84CA2A3DDE71A692E39602DEB96E61
#api密钥
pay.wechat.api-v3-key=k47rt4GYXinH6JwbjOUdNhrB4LPvvIHu

#商户私钥路径（微信服务端会根据证书序列号，找到证书获取公钥进行解密数据）
pay.wechat.private-key-path=classpath:/cert/apiclient_key.pem
#支付成功页面跳转
pay.wechat.success-return-url=https://xdclass.net
#支付成功，回调通知
pay.wechat.callback-url=http://b4gmw7.natappfree.cc/api/callback/order/v1/wechat

#logging.level.root=debug